services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: event-tracker-db
    environment:
      POSTGRES_DB: event_tracker
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - event-tracker-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Application
  app:
    build:
      context: .
      target: development
    container_name: event-tracker-app
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/event_tracker
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - event-tracker-network
    volumes:
      - .:/app
    command: >
      sh -c "
        python -m prisma migrate deploy &&
        python -m uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Production version (uncomment to use)
  # app-prod:
  #   build:
  #     context: .
  #     target: production
  #   container_name: event-tracker-app-prod
  #   environment:
  #     DATABASE_URL: postgresql://postgres:postgres@db:5432/event_tracker
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #   networks:
  #     - event-tracker-network
  #   command: >
  #     sh -c "
  #       python -m prisma migrate deploy &&
  #       python -m uvicorn app.main:app --host 0.0.0.0 --port 8000
  #     "

volumes:
  postgres_data:

networks:
  event-tracker-network:
    driver: bridge
