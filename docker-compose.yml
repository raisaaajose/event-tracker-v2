services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: event-tracker-db
    env_file:
      - .env
    environment:
      POSTGRES_DB: event_tracker
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - event-tracker-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Database Migration Service
  migrate:
    build:
      context: .
      target: development
    container_name: event-tracker-migrate
    env_file:
      - .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - event-tracker-network
    volumes:
      - .:/app
    command: python -m prisma migrate deploy
    profiles:
      - tools

  # FastAPI Application
  app:
    build:
      context: .
      target: development
    container_name: event-tracker-app
    env_file:
      - .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - event-tracker-network
    volumes:
      - .:/app
    command: python -m uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

volumes:
  postgres_data:

networks:
  event-tracker-network:
    driver: bridge
